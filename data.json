[
  {
    "file": "experiments/infinityPressure.js",
    "name": "Infinity Pressure",
    "description": "The inspiration comes from the artwork named Infinity Pressure by Joshua Davis Studios. The scratch idea is to draw circles to create an pipe that goes down and up in a pattern, with size changes using noise. When working with the color, I used both noise to generate a shading difference in the gray-scale, but used a math.random() value to generate different shades of blue. To get the interactive moving changes in the art, a random function is also used to either increase or decrease the opacity of each ellipse."
  },
  {
    "file": "experiments/infinityPressureV2.js",
    "name": "Infinity Pressure V2",
    "description": "This is a second verision of the artwork Infinity Pressure, and is therefore inspired by the same bases as the original. However, in this verision there is some changes in the design and I decided to use color in a different way. In this verision the color appears depending on the position of your mouse, making the artwork more interative for the user. However, the color that appears is generated similar to the color as in the original verision."
  } ,
  {
    "file": "experiments/haskell.js",
    "name": "Haskell Ben Kovach",
    "description": "A re-creation of artwork Haskell - Ben Kovach, which is following a clear grid created with for loops. It involves a randomness within a limit of the position of each squares corner. Apart from the shape, also the color is random selected from a selection of a few alternatives using Math.random(). There is also a chance of no square at all at every position, which also uses math.random()."
   } ,
  {
    "file": "experiments/haskellV2.js",
    "name": "Haskell Ben Kovach V2",
    "description": "Using the same foundation and colors as the first verision. However, this artwork is based on circles instead of squares, and instead of different position of the corners the size is changing. The size changes also uses Noise which is new for V2. This one also has removed the noLoop() function making the random pattern being drawn continuesly and looks like there is drawn new patterns all the time."
   },
   {
    "file": "experiments/flow-particle.js",
    "name": "Flow Explosion",
    "description": "This generative artwork is inspired by an artwork from google without a name. The idea is that it starts from one single points, and then spreads out in different angles to then continue together in a 'desired direction' based on a flowfield generated using perlin noise. Each 'line' is based on a class with specific attributes to behave the way as wanted, such as force, steer, & accerlation: these values are influenced by the flowfield and makes the 'lines' actually updating and moving continusly. In this version the lines opacity decrease a little for each step, and once the opacity hits a set point, some (based on random number) explodes and sends out a tons of particles to make it look like an explosion, using a variable checking when to explode and then generates a specific amount of particles in a particle array that generates values to send them in different angles to make it look like an explosion. PS! Click the screen to generate more drawing"
   },
   {
    "file": "experiments/flow-particle-V2.js",
    "name": "Flow Explosion V2",
    "description": "This is a second version of the first one, and is very similar. But in this case the particle explosion happens once reaching on of the 'walls' of the canvas and using checkborders to generated the explosion instead of being based on the opacity."
   },
   {
    "file": "experiments/centered-ball.js",
    "name": "Centered ball",
    "description": "This art was created unexpectedly while experimenting and learning the use of flowfields. I used an example for FlowFields from the lecture, and when changing the values to make everything start at x-position 0 with a random y-height, and changing the desired direction towards the center the result got unexpectedly cool and I decided to keep working on it. With some small changes of other values, such as colorvalues it ended up like this :)"
   },
   {
    "file": "experiments/game-of-life.js",
    "name": "Game of Life Re-work",
    "description":"An experimented version of game of life. Each cell is represented by the Cell class, which stores its state (alive or dead), age, and type (normal, aggressive, or passive). In addition to standard Game of Life rules, aggressive (red) cells can 'attack' passive (green) cells if they are surrounded by too many. With if statements to check the state of the neighbor cells on the board (2D grid), making the different states behave a certain way if they interact."
   },
   {
    "file": "experiments/sketchdrawing.js",
    "name": "Sketch Draw",
    "description":"This artwork is creating a pattern to look like a of lines drawn by a pencil close together. Using flowfield, forcing the Agents to follow a force going down, it will create several 'lines' from top to bottom. Once it reaches the bottom it restarts from the top using the a function checkboarders to move the y-pos and y-last pos to the top agian. It also has an increased speed and force to make the drawing look like its drawn faster."
   },
   {
    "file": "experiments/tone-flow.js",
    "name": "Tone Field",
    "description":""
   },
   {
    "file": "experiments/tone-2.js",
    "name": "MP3 vs Oscillator",
    "description":""
   }
]
